from typing_extensions import TYPE_CHECKING, Literal
from typing import Optional
import sys as _sys
import os
import warnings

# paystack Python bindings
# API docs at http://paystack.com/docs/api
# Authors:
# Patrick Collison <patrick@paystack.com>
# Greg Brockman <gdb@paystack.com>
# Andrew Metcalf <andrew@paystack.com>

# Configuration variables
from paystack._api_version import _ApiVersion
from paystack._api_requestor import _APIRequestor

# We must import the app_info module early to populate it into
# `sys.modules`; otherwise doing `import paystack.app_info` will end up
# importing that module, and not the global `AppInfo` name from below.
import paystack.app_info
from paystack._app_info import AppInfo as AppInfo
from paystack._version import VERSION as VERSION

# Constants
DEFAULT_API_BASE: str = "https://api.paystack.com"
DEFAULT_CONNECT_API_BASE: str = "https://connect.paystack.com"
DEFAULT_UPLOAD_API_BASE: str = "https://files.paystack.com"
DEFAULT_METER_EVENTS_API_BASE: str = "https://meter-events.paystack.com"


api_key: Optional[str] = None
client_id: Optional[str] = None
api_base: str = DEFAULT_API_BASE
connect_api_base: str = DEFAULT_CONNECT_API_BASE
upload_api_base: str = DEFAULT_UPLOAD_API_BASE
meter_events_api_base: str = DEFAULT_METER_EVENTS_API_BASE
api_version: str = _ApiVersion.CURRENT
verify_ssl_certs: bool = True
proxy: Optional[str] = None
default_http_client: Optional["HTTPClient"] = None
app_info: Optional[AppInfo] = None
enable_telemetry: bool = True
max_network_retries: int = 2
ca_bundle_path: str = os.path.join(
    os.path.dirname(__file__), "data", "ca-certificates.crt"
)

# Lazily initialized paystack.default_http_client
default_http_client = None
_default_proxy = None


def ensure_default_http_client():
    if default_http_client:
        _warn_if_mismatched_proxy()
        return
    _init_default_http_client()


def _init_default_http_client():
    global _default_proxy
    global default_http_client

    # If the paystack.default_http_client has not been set by the user
    # yet, we'll set it here. This way, we aren't creating a new
    # HttpClient for every request.
    default_http_client = new_default_http_client(
        verify_ssl_certs=verify_ssl_certs, proxy=proxy
    )
    _default_proxy = proxy


def _warn_if_mismatched_proxy():
    global _default_proxy
    from paystack import proxy

    if proxy != _default_proxy:
        warnings.warn(
            "paystack.proxy was updated after sending a "
            "request - this is a no-op. To use a different proxy, "
            "set paystack.default_http_client to a new client "
            "configured with the proxy."
        )


# Set to either 'debug' or 'info', controls console logging
log: Optional[Literal["debug", "info"]] = None

# OAuth
from paystack._oauth import OAuth as OAuth
from paystack._oauth_service import OAuthService as OAuthService

# Webhooks
from paystack._webhook import (
    Webhook as Webhook,
    WebhookSignature as WebhookSignature,
)

# paystackClient
from paystack._paystack_client import paystackClient as paystackClient  # noqa

from paystack.v2._event import ThinEvent as ThinEvent  # noqa


# Sets some basic information about the running application that's sent along
# with API requests. Useful for plugin authors to identify their plugin when
# communicating with paystack.
#
# Takes a name and optional version and plugin URL.
def set_app_info(
    name: str,
    partner_id: Optional[str] = None,
    url: Optional[str] = None,
    version: Optional[str] = None,
):
    global app_info
    app_info = {
        "name": name,
        "partner_id": partner_id,
        "url": url,
        "version": version,
    }


# Infrastructure types
from paystack._api_resource import APIResource as APIResource
from paystack._error_object import ErrorObject as ErrorObject
from paystack._error_object import OAuthErrorObject as OAuthErrorObject
from paystack._list_object import ListObject as ListObject
from paystack._search_result_object import (
    SearchResultObject as SearchResultObject,
)
from paystack._paystack_object import paystackObject as paystackObject
from paystack._request_options import RequestOptions as RequestOptions
from paystack._createable_api_resource import (
    CreateableAPIResource as CreateableAPIResource,
)
from paystack._custom_method import (
    custom_method as custom_method,
)
from paystack._deletable_api_resource import (
    DeletableAPIResource as DeletableAPIResource,
)
from paystack._listable_api_resource import (
    ListableAPIResource as ListableAPIResource,
)
from paystack._nested_resource_class_methods import (
    nested_resource_class_methods as nested_resource_class_methods,
)
from paystack._searchable_api_resource import (
    SearchableAPIResource as SearchableAPIResource,
)
from paystack._singleton_api_resource import (
    SingletonAPIResource as SingletonAPIResource,
)
from paystack._test_helpers import (
    APIResourceTestHelpers as APIResourceTestHelpers,
)
from paystack._updateable_api_resource import (
    UpdateableAPIResource as UpdateableAPIResource,
)
from paystack._verify_mixin import (
    VerifyMixin as VerifyMixin,
)
from paystack._requestor_options import (
    RequestorOptions as RequestorOptions,
)
from paystack._api_mode import (
    ApiMode as ApiMode,
)
from paystack._base_address import (
    BaseAddress as BaseAddress,
)

# Response types
from paystack._paystack_response import paystackResponse as paystackResponse
from paystack._paystack_response import paystackResponseBase as paystackResponseBase
from paystack._paystack_response import (
    paystackStreamResponse as paystackStreamResponse,
    paystackStreamResponseAsync as paystackStreamResponseAsync,
)

# Error types
from paystack._error import paystackError as paystackError
from paystack._error import APIError as APIError
from paystack._error import APIConnectionError as APIConnectionError
from paystack._error import paystackErrorWithParamCode as paystackErrorWithParamCode
from paystack._error import CardError as CardError
from paystack._error import IdempotencyError as IdempotencyError
from paystack._error import InvalidRequestError as InvalidRequestError
from paystack._error import AuthenticationError as AuthenticationError
from paystack._error import PermissionError as PermissionError
from paystack._error import RateLimitError as RateLimitError
from paystack._error import (
    SignatureVerificationError as SignatureVerificationError,
)

# HttpClient
from paystack._http_client import (
    HTTPClient as HTTPClient,
    PycurlClient as PycurlClient,
    RequestsClient as RequestsClient,
    UrlFetchClient as UrlFetchClient,
    HTTPXClient as HTTPXClient,
    AIOHTTPClient as AIOHTTPClient,
    new_default_http_client as new_default_http_client,
)

# Util
from paystack._util import convert_to_paystack_object as convert_to_paystack_object

# Backwards compatibility re-exports
if not TYPE_CHECKING:
    from paystack import _paystack_response as paystack_response
    from paystack import _paystack_object as paystack_object
    from paystack import _error_object as error_object
    from paystack import _error as error
    from paystack import _http_client as http_client
    from paystack import _util as util
    from paystack import _oauth as oauth
    from paystack import _webhook as webhook
    from paystack import _multipart_data_generator as multipart_data_generator
    from paystack import _request_metrics as request_metrics
    from paystack._file import File as FileUpload

    # Python 3.7+ supports module level __getattr__ that allows us to lazy load deprecated modules
    # this matters because if we pre-load all modules from api_resources while suppressing warning
    # users will never see those warnings
    if _sys.version_info[:2] >= (3, 7):

        def __getattr__(name):
            if name == "abstract":
                import paystack.api_resources.abstract as _abstract

                return _abstract
            if name == "api_resources":
                import paystack.api_resources as _api_resources

                return _api_resources
            raise AttributeError(
                f"module {__name__!r} has no attribute {name!r}"
            )

    else:
        with warnings.catch_warnings():
            warnings.filterwarnings("ignore", category=DeprecationWarning)

            import paystack.api_resources.abstract as abstract
            import paystack.api_resources as api_resources


# API resources

# The beginning of the section generated from our OpenAPI spec
from paystack import (
    apps as apps,
    billing as billing,
    billing_portal as billing_portal,
    checkout as checkout,
    climate as climate,
    entitlements as entitlements,
    events as events,
    financial_connections as financial_connections,
    forwarding as forwarding,
    identity as identity,
    issuing as issuing,
    radar as radar,
    reporting as reporting,
    sigma as sigma,
    tax as tax,
    terminal as terminal,
    test_helpers as test_helpers,
    treasury as treasury,
    v2 as v2,
)
from paystack._account import Account as Account
from paystack._account_capability_service import (
    AccountCapabilityService as AccountCapabilityService,
)
from paystack._account_external_account_service import (
    AccountExternalAccountService as AccountExternalAccountService,
)
from paystack._account_link import AccountLink as AccountLink
from paystack._account_link_service import (
    AccountLinkService as AccountLinkService,
)
from paystack._account_login_link_service import (
    AccountLoginLinkService as AccountLoginLinkService,
)
from paystack._account_person_service import (
    AccountPersonService as AccountPersonService,
)
from paystack._account_service import AccountService as AccountService
from paystack._account_session import AccountSession as AccountSession
from paystack._account_session_service import (
    AccountSessionService as AccountSessionService,
)
from paystack._apple_pay_domain import ApplePayDomain as ApplePayDomain
from paystack._apple_pay_domain_service import (
    ApplePayDomainService as ApplePayDomainService,
)
from paystack._application import Application as Application
from paystack._application_fee import ApplicationFee as ApplicationFee
from paystack._application_fee_refund import (
    ApplicationFeeRefund as ApplicationFeeRefund,
)
from paystack._application_fee_refund_service import (
    ApplicationFeeRefundService as ApplicationFeeRefundService,
)
from paystack._application_fee_service import (
    ApplicationFeeService as ApplicationFeeService,
)
from paystack._apps_service import AppsService as AppsService
from paystack._balance import Balance as Balance
from paystack._balance_service import BalanceService as BalanceService
from paystack._balance_transaction import (
    BalanceTransaction as BalanceTransaction,
)
from paystack._balance_transaction_service import (
    BalanceTransactionService as BalanceTransactionService,
)
from paystack._bank_account import BankAccount as BankAccount
from paystack._billing_portal_service import (
    BillingPortalService as BillingPortalService,
)
from paystack._billing_service import BillingService as BillingService
from paystack._capability import Capability as Capability
from paystack._card import Card as Card
from paystack._cash_balance import CashBalance as CashBalance
from paystack._charge import Charge as Charge
from paystack._charge_service import ChargeService as ChargeService
from paystack._checkout_service import CheckoutService as CheckoutService
from paystack._climate_service import ClimateService as ClimateService
from paystack._confirmation_token import ConfirmationToken as ConfirmationToken
from paystack._confirmation_token_service import (
    ConfirmationTokenService as ConfirmationTokenService,
)
from paystack._connect_collection_transfer import (
    ConnectCollectionTransfer as ConnectCollectionTransfer,
)
from paystack._country_spec import CountrySpec as CountrySpec
from paystack._country_spec_service import (
    CountrySpecService as CountrySpecService,
)
from paystack._coupon import Coupon as Coupon
from paystack._coupon_service import CouponService as CouponService
from paystack._credit_note import CreditNote as CreditNote
from paystack._credit_note_line_item import (
    CreditNoteLineItem as CreditNoteLineItem,
)
from paystack._credit_note_line_item_service import (
    CreditNoteLineItemService as CreditNoteLineItemService,
)
from paystack._credit_note_preview_lines_service import (
    CreditNotePreviewLinesService as CreditNotePreviewLinesService,
)
from paystack._credit_note_service import CreditNoteService as CreditNoteService
from paystack._customer import Customer as Customer
from paystack._customer_balance_transaction import (
    CustomerBalanceTransaction as CustomerBalanceTransaction,
)
from paystack._customer_balance_transaction_service import (
    CustomerBalanceTransactionService as CustomerBalanceTransactionService,
)
from paystack._customer_cash_balance_service import (
    CustomerCashBalanceService as CustomerCashBalanceService,
)
from paystack._customer_cash_balance_transaction import (
    CustomerCashBalanceTransaction as CustomerCashBalanceTransaction,
)
from paystack._customer_cash_balance_transaction_service import (
    CustomerCashBalanceTransactionService as CustomerCashBalanceTransactionService,
)
from paystack._customer_funding_instructions_service import (
    CustomerFundingInstructionsService as CustomerFundingInstructionsService,
)
from paystack._customer_payment_method_service import (
    CustomerPaymentMethodService as CustomerPaymentMethodService,
)
from paystack._customer_payment_source_service import (
    CustomerPaymentSourceService as CustomerPaymentSourceService,
)
from paystack._customer_service import CustomerService as CustomerService
from paystack._customer_session import CustomerSession as CustomerSession
from paystack._customer_session_service import (
    CustomerSessionService as CustomerSessionService,
)
from paystack._customer_tax_id_service import (
    CustomerTaxIdService as CustomerTaxIdService,
)
from paystack._discount import Discount as Discount
from paystack._dispute import Dispute as Dispute
from paystack._dispute_service import DisputeService as DisputeService
from paystack._entitlements_service import (
    EntitlementsService as EntitlementsService,
)
from paystack._ephemeral_key import EphemeralKey as EphemeralKey
from paystack._ephemeral_key_service import (
    EphemeralKeyService as EphemeralKeyService,
)
from paystack._error import (
    TemporarySessionExpiredError as TemporarySessionExpiredError,
)
from paystack._event import Event as Event
from paystack._event_service import EventService as EventService
from paystack._exchange_rate import ExchangeRate as ExchangeRate
from paystack._exchange_rate_service import (
    ExchangeRateService as ExchangeRateService,
)
from paystack._file import File as File
from paystack._file_link import FileLink as FileLink
from paystack._file_link_service import FileLinkService as FileLinkService
from paystack._file_service import FileService as FileService
from paystack._financial_connections_service import (
    FinancialConnectionsService as FinancialConnectionsService,
)
from paystack._forwarding_service import ForwardingService as ForwardingService
from paystack._funding_instructions import (
    FundingInstructions as FundingInstructions,
)
from paystack._identity_service import IdentityService as IdentityService
from paystack._invoice import Invoice as Invoice
from paystack._invoice_item import InvoiceItem as InvoiceItem
from paystack._invoice_item_service import (
    InvoiceItemService as InvoiceItemService,
)
from paystack._invoice_line_item import InvoiceLineItem as InvoiceLineItem
from paystack._invoice_line_item_service import (
    InvoiceLineItemService as InvoiceLineItemService,
)
from paystack._invoice_rendering_template import (
    InvoiceRenderingTemplate as InvoiceRenderingTemplate,
)
from paystack._invoice_rendering_template_service import (
    InvoiceRenderingTemplateService as InvoiceRenderingTemplateService,
)
from paystack._invoice_service import InvoiceService as InvoiceService
from paystack._invoice_upcoming_lines_service import (
    InvoiceUpcomingLinesService as InvoiceUpcomingLinesService,
)
from paystack._issuing_service import IssuingService as IssuingService
from paystack._line_item import LineItem as LineItem
from paystack._login_link import LoginLink as LoginLink
from paystack._mandate import Mandate as Mandate
from paystack._mandate_service import MandateService as MandateService
from paystack._payment_intent import PaymentIntent as PaymentIntent
from paystack._payment_intent_service import (
    PaymentIntentService as PaymentIntentService,
)
from paystack._payment_link import PaymentLink as PaymentLink
from paystack._payment_link_line_item_service import (
    PaymentLinkLineItemService as PaymentLinkLineItemService,
)
from paystack._payment_link_service import (
    PaymentLinkService as PaymentLinkService,
)
from paystack._payment_method import PaymentMethod as PaymentMethod
from paystack._payment_method_configuration import (
    PaymentMethodConfiguration as PaymentMethodConfiguration,
)
from paystack._payment_method_configuration_service import (
    PaymentMethodConfigurationService as PaymentMethodConfigurationService,
)
from paystack._payment_method_domain import (
    PaymentMethodDomain as PaymentMethodDomain,
)
from paystack._payment_method_domain_service import (
    PaymentMethodDomainService as PaymentMethodDomainService,
)
from paystack._payment_method_service import (
    PaymentMethodService as PaymentMethodService,
)
from paystack._payout import Payout as Payout
from paystack._payout_service import PayoutService as PayoutService
from paystack._person import Person as Person
from paystack._plan import Plan as Plan
from paystack._plan_service import PlanService as PlanService
from paystack._price import Price as Price
from paystack._price_service import PriceService as PriceService
from paystack._product import Product as Product
from paystack._product_feature import ProductFeature as ProductFeature
from paystack._product_feature_service import (
    ProductFeatureService as ProductFeatureService,
)
from paystack._product_service import ProductService as ProductService
from paystack._promotion_code import PromotionCode as PromotionCode
from paystack._promotion_code_service import (
    PromotionCodeService as PromotionCodeService,
)
from paystack._quote import Quote as Quote
from paystack._quote_computed_upfront_line_items_service import (
    QuoteComputedUpfrontLineItemsService as QuoteComputedUpfrontLineItemsService,
)
from paystack._quote_line_item_service import (
    QuoteLineItemService as QuoteLineItemService,
)
from paystack._quote_service import QuoteService as QuoteService
from paystack._radar_service import RadarService as RadarService
from paystack._refund import Refund as Refund
from paystack._refund_service import RefundService as RefundService
from paystack._reporting_service import ReportingService as ReportingService
from paystack._reserve_transaction import (
    ReserveTransaction as ReserveTransaction,
)
from paystack._reversal import Reversal as Reversal
from paystack._review import Review as Review
from paystack._review_service import ReviewService as ReviewService
from paystack._setup_attempt import SetupAttempt as SetupAttempt
from paystack._setup_attempt_service import (
    SetupAttemptService as SetupAttemptService,
)
from paystack._setup_intent import SetupIntent as SetupIntent
from paystack._setup_intent_service import (
    SetupIntentService as SetupIntentService,
)
from paystack._shipping_rate import ShippingRate as ShippingRate
from paystack._shipping_rate_service import (
    ShippingRateService as ShippingRateService,
)
from paystack._sigma_service import SigmaService as SigmaService
from paystack._source import Source as Source
from paystack._source_mandate_notification import (
    SourceMandateNotification as SourceMandateNotification,
)
from paystack._source_service import SourceService as SourceService
from paystack._source_transaction import SourceTransaction as SourceTransaction
from paystack._source_transaction_service import (
    SourceTransactionService as SourceTransactionService,
)
from paystack._subscription import Subscription as Subscription
from paystack._subscription_item import SubscriptionItem as SubscriptionItem
from paystack._subscription_item_service import (
    SubscriptionItemService as SubscriptionItemService,
)
from paystack._subscription_item_usage_record_service import (
    SubscriptionItemUsageRecordService as SubscriptionItemUsageRecordService,
)
from paystack._subscription_item_usage_record_summary_service import (
    SubscriptionItemUsageRecordSummaryService as SubscriptionItemUsageRecordSummaryService,
)
from paystack._subscription_schedule import (
    SubscriptionSchedule as SubscriptionSchedule,
)
from paystack._subscription_schedule_service import (
    SubscriptionScheduleService as SubscriptionScheduleService,
)
from paystack._subscription_service import (
    SubscriptionService as SubscriptionService,
)
from paystack._tax_code import TaxCode as TaxCode
from paystack._tax_code_service import TaxCodeService as TaxCodeService
from paystack._tax_deducted_at_source import (
    TaxDeductedAtSource as TaxDeductedAtSource,
)
from paystack._tax_id import TaxId as TaxId
from paystack._tax_id_service import TaxIdService as TaxIdService
from paystack._tax_rate import TaxRate as TaxRate
from paystack._tax_rate_service import TaxRateService as TaxRateService
from paystack._tax_service import TaxService as TaxService
from paystack._terminal_service import TerminalService as TerminalService
from paystack._test_helpers_service import (
    TestHelpersService as TestHelpersService,
)
from paystack._token import Token as Token
from paystack._token_service import TokenService as TokenService
from paystack._topup import Topup as Topup
from paystack._topup_service import TopupService as TopupService
from paystack._transfer import Transfer as Transfer
from paystack._transfer_reversal_service import (
    TransferReversalService as TransferReversalService,
)
from paystack._transfer_service import TransferService as TransferService
from paystack._treasury_service import TreasuryService as TreasuryService
from paystack._usage_record import UsageRecord as UsageRecord
from paystack._usage_record_summary import (
    UsageRecordSummary as UsageRecordSummary,
)
from paystack._v2_services import V2Services as V2Services
from paystack._webhook_endpoint import WebhookEndpoint as WebhookEndpoint
from paystack._webhook_endpoint_service import (
    WebhookEndpointService as WebhookEndpointService,
)
# The end of the section generated from our OpenAPI spec
